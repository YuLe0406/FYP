CREATE TABLE USER (
    U_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_FName VARCHAR(255) NOT NULL,
    U_LName VARCHAR(255) NOT NULL,
    U_DOB DATE NOT NULL,
    U_Gender ENUM('Male', 'Female', 'Other') NOT NULL,
    U_Email VARCHAR(255) NOT NULL UNIQUE,
    U_Password VARCHAR(255) NOT NULL,
    U_PNumber VARCHAR(11) NOT NULL
);

CREATE TABLE ADMIN (
    A_ID INT AUTO_INCREMENT PRIMARY KEY,
    A_Name VARCHAR(255) NOT NULL,
    A_Password VARCHAR(255) NOT NULL,
    A_Email VARCHAR(255) NOT NULL UNIQUE,
    A_CN VARCHAR(11) NOT NULL,
    A_Level TINYINT(1) NOT NULL CHECK (A_Level IN (0,1)) -- 1 for Superadmin, 0 for Admin
);

CREATE TABLE CATEGORIES (
    C_ID INT AUTO_INCREMENT PRIMARY KEY,
    C_Name VARCHAR(255) NOT NULL,
    C_Style VARCHAR(255) NOT NULL
);

CREATE TABLE PRODUCT (
    P_ID INT AUTO_INCREMENT PRIMARY KEY,
    C_ID INT NOT NULL,
    P_Name VARCHAR(255) NOT NULL,
    P_Price DECIMAL(10,2) NOT NULL,
    P_Picture BLOB,
    FOREIGN KEY (C_ID) REFERENCES CATEGORIES(C_ID) ON DELETE CASCADE
);

CREATE TABLE PRODUCT_VARIANTS (
    PV_ID INT AUTO_INCREMENT PRIMARY KEY,
    P_ID INT NOT NULL,
    P_Color VARCHAR(50) NOT NULL,
    P_Size VARCHAR(50) NOT NULL,
    P_Quantity INT NOT NULL,
    FOREIGN KEY (P_ID) REFERENCES PRODUCT(P_ID) ON DELETE CASCADE
);

CREATE TABLE ADDRESS (
    AD_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NOT NULL,
    AD_Details TEXT NOT NULL,
    AD_City VARCHAR(255) NOT NULL,
    AD_State VARCHAR(255) NOT NULL,
    AD_ZipCode VARCHAR(10) NOT NULL,
    FOREIGN KEY (U_ID) REFERENCES USER(U_ID) ON DELETE CASCADE
);

CREATE TABLE WISHLIST (
    wishlist_id INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NOT NULL,
    P_ID INT NOT NULL,
    wishlist_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (U_ID) REFERENCES USER(U_ID) ON DELETE CASCADE,
    FOREIGN KEY (P_ID) REFERENCES PRODUCT(P_ID) ON DELETE CASCADE,
    UNIQUE (U_ID, P_ID)  -- Prevent duplicate wishlists for the same product
);

CREATE TABLE CART (
    CART_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NOT NULL,
    P_ID INT NOT NULL,
    PV_ID INT DEFAULT NULL, -- Allow NULL for non-variant products
    CART_Quantity INT NOT NULL CHECK (CART_Quantity > 0),
    CART_Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (U_ID) REFERENCES USER(U_ID) ON DELETE CASCADE,
    FOREIGN KEY (P_ID) REFERENCES PRODUCT(P_ID) ON DELETE CASCADE,
    FOREIGN KEY (PV_ID) REFERENCES PRODUCT_VARIANTS(PV_ID) ON DELETE SET NULL
);

CREATE TABLE ORDERS (
    O_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NOT NULL,
    AD_ID INT NOT NULL,
    O_PM ENUM('Credit Card', 'PayPal', 'Cash on Delivery') NOT NULL, -- Enforce valid payment methods
    O_Date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    O_Status ENUM('Pending', 'Shipped', 'Delivered', 'Cancelled') NOT NULL DEFAULT 'Pending',
    O_TotalAmount DECIMAL(10,2) NOT NULL CHECK (O_TotalAmount >= 0),
    O_DC DECIMAL(10,2) DEFAULT 0, -- Default to 0 if no discount
    FOREIGN KEY (U_ID) REFERENCES USER(U_ID) ON DELETE CASCADE,
    FOREIGN KEY (AD_ID) REFERENCES ADDRESS(AD_ID) ON DELETE CASCADE
);

CREATE TABLE ORDER_ITEMS (
    OI_ID INT AUTO_INCREMENT PRIMARY KEY,
    O_ID INT NOT NULL,
    P_ID INT NOT NULL,
    PV_ID INT DEFAULT NULL,
    OI_Quantity INT NOT NULL CHECK (OI_Quantity > 0),
    OI_Price DECIMAL(10,2) NOT NULL CHECK (OI_Price >= 0),
    FOREIGN KEY (O_ID) REFERENCES ORDERS(O_ID) ON DELETE CASCADE,
    FOREIGN KEY (P_ID) REFERENCES PRODUCT(P_ID) ON DELETE CASCADE,
    FOREIGN KEY (PV_ID) REFERENCES PRODUCT_VARIANTS(PV_ID) ON DELETE SET NULL
);

CREATE TABLE PAYMENT (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    O_ID INT NOT NULL,
    payment_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    payment_method ENUM('Credit Card', 'PayPal', 'Cash on Delivery') NOT NULL,
    amount DECIMAL(10,2) NOT NULL CHECK (amount >= 0),
    FOREIGN KEY (O_ID) REFERENCES ORDERS(O_ID) ON DELETE CASCADE
);

CREATE TABLE VOUCHER (
    VOUCHER_ID INT AUTO_INCREMENT PRIMARY KEY,
    VOUCHER_Code VARCHAR(50) NOT NULL UNIQUE,
    VOUCHER_Discount DECIMAL(5,2) NOT NULL CHECK (VOUCHER_Discount >= 0 AND VOUCHER_Discount <= 100),
    VOUCHER_ExpiryDate TIMESTAMP NOT NULL,
    VOUCHER_UsageLimit INT NOT NULL CHECK (VOUCHER_UsageLimit > 0),
    VOUCHER_UsedCount INT DEFAULT 0 CHECK (VOUCHER_UsedCount >= 0)
);

CREATE TABLE FEEDBACK (
    FEEDBACK_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NOT NULL,
    P_ID INT NOT NULL,
    FEEDBACK_Rating INT NOT NULL CHECK (FEEDBACK_Rating BETWEEN 1 AND 5),
    FEEDBACK_Comment TEXT,
    FEEDBACK_Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (U_ID) REFERENCES USER(U_ID) ON DELETE CASCADE,
    FOREIGN KEY (P_ID) REFERENCES PRODUCT(P_ID) ON DELETE CASCADE
);
